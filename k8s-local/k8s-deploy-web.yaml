apiVersion: apps/v1
kind: Deployment
metadata:
  name: doodles-webserver
  namespace: doodles-ns
  labels:
    app: doodles-webservice
    tier: frontend-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doodles-webservice
      tier: frontend-webserver
  template:
    metadata:
      labels:
        app: doodles-webservice
        tier: frontend-webserver
    spec:
      containers:
      - name: webserver
        image:  daniellandau1998/node-webserver:k8s
        ports:
        - containerPort: 3000
        - containerPort: 80
        resources:
          limits: { memory: "256Mi", cpu: "100m" }
        volumeMounts:
        - { mountPath: "/var/project/src/public/assets/doodles", name: image-data }
        envFrom:
          - secretRef: { name: sql.pass.data }  # Password and Rootpassword
          - secretRef: { name: ssl.cert.data }  # SSL certificates
          - secretRef: { name: jwt.rsa.data }   # JWT keys for signing
          - secretRef: { name: jwt.enc.conf }   # JWT keys and configuration for encryption
          - configMapRef: { name: node.webserver.config }
        env:
          - name: SQL_PASSWORD # Password to access sql database
            valueFrom: { secretKeyRef: { key: MYSQL_PASSWORD, name: sql.pass.data  }}
      volumes:
      - name: image-data
        persistentVolumeClaim:
          claimName: image-data-claim

---

apiVersion: v1
kind: Service
metadata:
  name: doodles-webserver-svc
  namespace: doodles-ns
spec:
  selector:
    app: doodles-webservice
    tier: frontend-webserver
  type: ClusterIP
  ports:
  - { name: https, port: 443, targetPort: 443 }
  - { name: http, port: 80, targetPort: 80 }

# doesn't work on docker for desktop
# kubectl port-forward svc/doodles-webserver-svc 6000:3000
